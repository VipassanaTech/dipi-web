  <?php

include_once(dirname(__FILE__)."/address-book.inc");
include_once(dirname(__FILE__)."/schedule.inc");


/**
 * Implements hook_permission().
 */
function dh_atportal_permission() 
{

	$perms['access at portal'] = array('title' => t('Access AT Portal') ) ;
	$perms['access at address book'] = array('title' => t('Access AT Address Book') );
	$perms['access at profile'] = array('title' => t('Access AT Profile') );
	$perms['access any profile'] = array('title' => t('Access Any AT Profile') );
	$perms['add assistant teacher'] = array('title' => t('Add AT'));
	$perms['at portal superadmin'] = array('title' => t('AT Portal Superadmin'));
	$perms['approve applications'] = array('title' => t('Center LC Admin Approve/Reject Apps'));
	$perms['approve applications on behalf of at'] = array('title' => t('Teacher LC Admin Approve/Reject Apps'));
	return $perms;
}


function dh_atportal_menu() 
{
    $items['at-portal'] = array( 'title' => t('AT Portal Dashboard'),
	       'page callback' => 'dh_atportal_dashboard',
	       'access arguments' => array('access at portal'),
	       'type' => MENU_CALLBACK);

    $items['lc-review/%atcode'] = array( 'title' => t('Reviews Assigned to me'),
	       'page callback' => 'dh_atportal_show_apps',
	       'page arguments' => array('other'),
	       'access arguments' => array('access at portal'),
	       'type' => MENU_CALLBACK);

    $items['lc-review/me'] = array( 'title' => t('Reviews Assigned to me'),
	       'page callback' => 'dh_atportal_show_apps',
	       'page arguments' => array('me'),
	       'access arguments' => array('access at portal'),
	       'type' => MENU_CALLBACK);

    $items['lc-review/all'] = array( 'title' => t('All Reviews'),
	       'page callback' => 'dh_atportal_show_apps',
	       'page arguments' => array('all'),
	       'access arguments' => array('access at portal'),
	       'type' => MENU_CALLBACK);

    $items['lc-review/app/%lcappid'] = array( 'title' => t('Review Application'),
	       'page callback' => 'drupal_get_form',
	       'page arguments' => array('dh_atportal_review_form', 2),
	       'access arguments' => array('access at portal'),
	       'type' => MENU_CALLBACK);

    $items['at-portal/address-book/edit/%atcode'] = array( 'title' => t('Edit Profile'),
	       'page callback' => 'dh_manage_at',
	       'page arguments' => array('dh_manage_at', 3),
	       'access arguments' => array('access at profile'),
	       'type' => MENU_CALLBACK);

    $items['at-portal/address-book/edit/me'] = array( 'title' => t('My Profile'),
	       'page callback' => 'dh_manage_at',
	       'page arguments' => array('me'),
	       'access arguments' => array('access at profile'),
	       'type' => MENU_CALLBACK);

    $items['at-portal/address-book'] = array( 'title' => t('AT Address Book'),
	       'page callback' => 'dh_atportal_address_book',
	       'access arguments' => array('access at address book'),
	       'type' => MENU_CALLBACK);

    $items['at-portal/address-book/add'] = array( 'title' => t('Add AT'),
	       'page callback' => 'drupal_get_form',
	       'page arguments' => array('dh_manage_at', 'add'),
	       'access arguments' => array('add assistant teacher'),
	       'type' => MENU_CALLBACK);

    $items['at-portal/address-book/ajax'] = array( 'title' => t('AT Address Book'),
	       'page callback' => 'address_book_search',
	       'access arguments' => array('access at address book'),
	       'type' => MENU_CALLBACK);

	$items['show-application-at/%lcappid'] = array( 'title' => t('Application PDF'),
	       'page callback' => 'show_lc_application_pdf',
	       'page arguments' => array(1),
	       'access arguments' => array('access at portal'),
	       'type' => MENU_CALLBACK);

	$items['at-portal/course-list'] = array( 'title' => t('Courses List for AT-Seva'),
			'page callback' => 'drupal_get_form',
			'page arguments' => array('at_course_list_form'),
	       'access arguments' => array('access at portal'),
	       'type' => MENU_CALLBACK);


	$items['at-portal/course-apply/%'] = array( 'title' => t('Apply AT-Seva Application'),
			'page callback' => 'drupal_get_form',
			'page arguments' => array('apply_at_application_form', 2),
	       'access arguments' => array('access at portal'),
	       'type' => MENU_CALLBACK);


	$items['at-portal/applied-courses-list'] = array( 'title' => t('Show Applied AT-Seva List'),
			'page callback' => 'drupal_get_form',
			'page arguments' => array('at_applied_courses_list_form'),
	       'access arguments' => array('access at portal'),
	       'type' => MENU_CALLBACK);

	$items['at-portal/show-course-application/%atappid'] = array( 'title' => t('Show AT-Seva Application'),
	       'page callback' => 'drupal_get_form',
			'page arguments' => array('show_at_application_form', 2),
	       'access arguments' => array('access at portal'),
	       'type' => MENU_CALLBACK);

  $items['at-portal/my-referral'] = array( 'title' => t('My Referrals'),
      'page callback' => 'my_referral',
         'access arguments' => array('access at portal'),
         'type' => MENU_CALLBACK);

  $items['at-portal/referral/update/%atrefid'] = array('title' => t('Update AT Referral Date'),
         'page callback' => 'at_referral_update',
         'page arguments' => array(3),
         'access arguments' => array('access at portal'),
         'type' => MENU_CALLBACK);

    $items['at-portal/referral/delete/%atrefid'] = array('title' => t('Delete AT Referral'),
         'page callback' => 'at_referral_delete',
         'page arguments' => array(3),
         'access arguments' => array('access at portal'),
         'type' => MENU_CALLBACK);

    $items['at-portal/at-meet'] = array('title' => t('AT-Meet'),
         'page callback' => 'at_meet',
         'access arguments' => array('access at portal'),
         'type' => MENU_CALLBACK);

    $items['at-portal/at-meet/%/%'] = array('title' => t('Apply AT-Meet'),
         'page callback' => 'at_meet_apply',
         'access arguments' => array('access at portal'),
         'type' => MENU_CALLBACK);

    $items['at-portal/course-sit-list'] = array( 'title' => t('Courses List for Sitting/Serving'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('at_course_sit_list_form'),
         'access arguments' => array('access at portal'),
         'type' => MENU_CALLBACK);

    $items['at-portal/course-sit-apply/%/%'] = array( 'title' => t('Apply for Sitting/Serving'),
        'page callback' => 'at_course_sit_apply',
        'access arguments' => array('access at portal'),
        'type' => MENU_CALLBACK);

    return $items;
}


function dh_atportal_theme()
{
	return array(
		// Name to be called with theme(). theme('lc-review', $data)
		'lc-review' => array(
			// Which .tpl.php file to use lc-review.tpl.php
			'template' => 'lc-review',
			'path' => drupal_get_path('module', 'dh_atportal')
		)
	);
}

function lcappid_load( $id )
{
	global $user;
	if ( ! is_numeric($id) )
		return false;

	$centre_id = db_query("select a_center from dh_applicant where a_id='$id'")->fetchField();
	if ($centre_id == '')
		return false;
	if (user_access("at portal superadmin"))
		return $id;

	if (user_access("access any profile"))
		return $id;

	$at_names = array();

	if (user_access('approve applications on behalf of at'))
		$at_names = dh_atportal_get_ats_assigned();

	$at_name = db_query("select CONCAT(t_f_name, ' ', t_l_name) from dh_teacher where t_status='Active' and CONCAT(t_code,'.',t_gender) = '".$user->name."'")->fetchField();

	if ($at_name)
		$at_names[] = $at_name;

	if (count($at_names)>0)
	{
		$q = "select al_recommending, al_area_at from dh_applicant_lc where al_applicant=:al_applicant";
		$row = db_query($q, array(':al_applicant' => $id))->fetchAssoc();

		if (in_array($row['al_recommending'], $at_names) || in_array($row['al_area_at'], $at_names))
			return $id;
	}

	$count = db_query("select count(uc_id) from dh_user_center where uc_center='$centre_id' and uc_user='".$user->uid."'  and uc_deleted=0")->fetchField();
	if ( $count <= 0  )
		return false;

	return $id;
}


function atcode_load( $id )
{
	global $user;
	if (user_access("at portal superadmin"))
		return True;
	if (in_array($id, array('me', 'all')))
		return True;
}


function atappid_load ( $id )
{
	if (!is_numeric($id))
		return false;
	
	global $user;
	
	$q = "select ce.c_id as 'center', t.t_id as 'teacher' from dh_course_teacher ct
		left join dh_teacher t on ct.ct_teacher=t.t_id
		left join dh_course co on ct.ct_course=co.c_id
		left join dh_center ce on co.c_center=ce.c_id
		where ct.ct_id=:ct_id";

	$res = db_query($q, array(':ct_id'=> $id))->fetchAssoc();

	if (!$res)
		return false;

	if (user_access("access all centres"))
		return $id;

	$temp = db_query("select count(uc_id) from dh_user_center where uc_user='".$user->uid."' and uc_center='{$res['center']}' and uc_deleted=0")->fetchField();

	if ($temp > 0 )
		return $id;

	$at_code = $user->name;

	$q = "select t_id from dh_teacher where t_status='Active' and CONCAT(t_code,'.',t_gender) = '$at_code' limit 1";
	$at_id = db_query($q)->fetchField();

	if ($at_id == $res['teacher'])
		return $id;

	return false;
	
}

function atrefid_load ( $id )
{
  if (!is_numeric($id))
    return false;

  global $user;

  $at_id = db_query("select t_id from dh_teacher where t_status='Active' and CONCAT(t_code,'.',t_gender) = '$user->name' limit 1")->fetchField();

  if(!$at_id)
    return false;

  $count = db_query("select count(*) from dh_referral where r_id=$id and r_teacher=$at_id")->fetchField();

  if($count > 0)
    return $id;

  return false;
}

function dh_atportal_form_alter(&$form, &$form_state, $form_id) 
{
	global $user;
	if ((strpos($form_id, 'user_login') !== FALSE)) 
	{
		// Add validation handler in the right place.
		$final_validate = array_pop($form['#validate']);
		array_push($form['#validate'], 'dh_atportal_login_validate', $final_validate );
	}
	elseif ((strpos($form_id, 'user_pass') !== FALSE) )
	{
		//if ($user->uid == 1)
		//drupal_set_message(print_r($form['#validate'], true));
		$final_validate = array_pop($form['#validate']);
		array_push($form['#validate'], 'dh_atportal_passreset_validate', $final_validate );

	}
}

function dh_atportal_check_and_register_user( $username, $password = '', $logout = False, $form, &$form_state )
{
	//global $user;
	$q = "select count(name) from users where name=:user";
	$check = db_query($q, array(':user' => $username))->fetchField();
	if ($check)
	{
		return;
	}

	$q = "select CONCAT(t_f_name, ' ', t_l_name) as 'FullName', t_year_appointed, t_email  from dh_teacher where CONCAT(t_code,'.',t_gender) = :user limit 1";
	$row = db_query($q, array(':user' => $username))->fetchAssoc();
	if (!$row)
		return False;
	$allow = False;
	if ($password)
	{
		if ($row['t_year_appointed'] == $password)
			$allow = True;
	}
	else
		$allow = True;

	if ($allow)
	{
		user_external_login_register($username, 'dh_atportal');
		$account = user_external_load($username);
		$mail = '';
		if ($row['t_email'] <> '')
			$mail = $row['t_email']; 
		user_save($account, array('mail' => $mail ));
		$role = user_role_load_by_name("AT Portal");
		user_multiple_role_edit(array($account->uid), 'add_role', $role->rid);		
		if ($logout)
		{
			$form_state['values']['account'] = $account;
			user_pass_submit($form, $form_state);
			session_destroy();
			$null = NULL;
			user_module_invoke('logout', $null, $account);
			drupal_set_message("Please check your email for further instructions");
			drupal_goto("");
		}
		else
			$form_state['uid'] = $account->uid;
	}
}

function dh_atportal_passreset_validate($form, &$form_state)
{
	if (array_key_exists('uid', $form_state) && ($form_state['uid'] == 1)) 
		return;

	$username = $form_state['values']['name'];
	if ($username == '')
		return False;


	return dh_atportal_check_and_register_user( $username, '', True, $form,  $form_state );
}

/**
 * Validation callback used by user auth api to deal with additional validation.
 */
function dh_atportal_login_validate($form, &$form_state) 
{
	if (array_key_exists('uid', $form_state) && ($form_state['uid'] == 1)) 
		return;

	$username = $form_state['values']['name'];
	$password = $form_state['values']['pass'];


	return dh_atportal_check_and_register_user( $username, $password, False, $form, $form_state );
	// Always add uid into form state regardless of whether
	// user_external_login_register is being used.
	// As we are using our own validate handler. user module needs $form_state['uid'].
	//$form_state['uid'] = $account->uid;
}


function dh_atportal_dashboard()
{
	$modules = array(
		'Reviews Assigned to me' => 'lc-review/me',
		'All Reviews' => 'lc-review/all',
		'My Profile' => 'at-portal/address-book/edit/me',
		'AT Address Book' => 'at-portal/address-book',
		'Apply for AT-Seva in a Course' => 'at-portal/course-list',
		'Courses Allotted-to-me / Applied-by-me for AT-Seva' => 'at-portal/applied-courses-list',
    // 'Apply to Sit/Serve in a Course' => 'at-portal/course-sit-list',
    'Add Referral' => 'at-portal/referral/add',
		'Referral List' => 'referral',
    'My Referral List' => 'at-portal/my-referral',
    'Apply for AT-Meeting' => 'at-portal/at-meet',
    'Create CAT Vote' => 'node/add/poll',
    'CAT Voting' => 'cat-voting',
    'Create Request for Comments' => 'node/add/request-for-comments',
    'Request for Comments' => 'request-for-comments',
	);

	$out = '<h1>AT Portal Dashboard</h1><ul>';

	foreach($modules as $key => $val )
	{
		if (drupal_valid_path($val))
			$out .= '<h2><li>'.l($key, $val).'</li></h2>';
	}
	$out .= '</ul>';
	return $out;
}

function dh_atportal_show_apps( $type )
{
	$out = drupal_get_form('dh_atportal_apps_form', $type);
	$temp = $type;
	if ($type == 'other')
		$temp = arg(1);
	//$out['a']['#prefix'] =  '<h3>'.l("Back", "lc-review/$temp").'</h3>';
	return $out;
}

function dh_atportal_make_pretty( $value )
{
	$ret = '';
	switch($value)
	{
		case 'Pending': 
			$ret = '<font color="blue"><b>'.$value.'</b></font>';
			break;
		case 'Approved': 
			$ret = '<font color="green"><b>'.$value.'</b></font>';
			break;
		case 'Rejected': 
			$ret = '<font color="red"><b>'.$value.'</b></font>';
			break;
		case 'Transfer to Registrar': 
			$ret = '<font color="orange"><b>'.$value.'</b></font>';
			break;
	}
	return $ret;
}

function dh_atportal_get_centers_assigned()
{
	global $user;
	$res = db_query("select uc_center from dh_user_center where uc_user='".$user->uid."'");
	$center_access = array();
	while($r = $res->fetchAssoc())
		$center_access[] = $r['uc_center'];
	return $center_access;
}

function dh_atportal_get_ats_assigned()
{
	global $user;
	$q = "select
    CONCAT(t.t_f_name, ' ', t.t_l_name) as teacher
    FROM dh_lc_admin la
    left join dh_state s on la.la_state=s.s_id
    left join dh_teacher t on
    (
      t.t_id=la.la_teacher or
      t.t_city=la.la_city or
      (t.t_state=s.s_code and t.t_country=s.s_country) or
      t.t_country=la.la_country or
      t.t_region=la.la_region
    )
    where
    la.la_deleted<>1 and
    t.t_status='Active' and
    la.la_user='".$user->uid."'";

	$result = db_query($q);

	$at_access = array();
	while( $row = $result->fetchAssoc() )
	{
		if ($row['teacher'])
			$at_access[] = $row['teacher'];
	}

	return $at_access;
}

function dh_atportal_apps_form($form, &$form_state, $type)
{
	global $user;
	$at_code = '';
	if (in_array($type, array('me', 'all') ))
		$at_code = $user->name;
	elseif ($type == 'other' )
		$at_code = arg(1);

	$diff_days = 730;
	$where = '';
	$where_opts = array(); 
	$q = "select CONCAT(t_f_name, ' ', t_l_name) from dh_teacher where t_status='Active' and CONCAT(t_code,'.',t_gender) = '$at_code' limit 1";
	$at_name = db_query($q)->fetchField();

	if (($at_name == '') && (!user_access('approve applications')) && (!user_access('approve applications on behalf of at')))
	{
		$form['a'] = array('#markup' => '<h2>Unable to find applications for '.$user->name.' </h2>');	
		return $form;
	}

	if (($type == 'me') && (!$at_name))
	{
		$form['a'] = array('#markup' => '<h2>Unable to find applications for '.$user->name.' </h2>');	
		return $form;
	}
	switch ($type )
	{
		case 'me':
		case 'other':
			$where = "(al.al_recommending = :frname or al.al_area_at = :faname )";
			$where_opts = array( ':frname' => $at_name, ':faname' => $at_name );
			break;
		case 'all':
			$diff_days = 365;
			if (user_access('approve applications'))
			{
				$cntrs = dh_atportal_get_centers_assigned();
				$where = 'a_center in (-1)';
				if (count($cntrs) > 0)
					$where = "a_center in (".implode(",", $cntrs).") ";
			}
			elseif (user_access('approve applications on behalf of at'))
			{
				$ats = dh_atportal_get_ats_assigned();
				$where = 'a_center in (-1)';
				if (count($ats) > 0)
				{
					$where = "(al.al_recommending in (:frnames) or al.al_area_at in (:fanames) )";
					$where_opts = array( ':frnames' => $ats, ':fanames' => $ats );
				}
			}
			else
			{
				$where = 'a_center in (-1)';
			}
			break;
	}

	drupal_add_css( libraries_get_path("editor"). "/DataTables/datatables.min.css");
	drupal_add_js( libraries_get_path("editor").  "/DataTables/datatables.min.js");

	drupal_add_css( drupal_get_path('module', 'dh_manageapp'). "/css/jquery-confirm.min.css");
	drupal_add_js( drupal_get_path('module', 'dh_manageapp'). "/js/jquery-confirm.min.js");
	


	//$form['a'] = array('#markup' => 'Hi there, I am '.$at_name);
	$q = "select CONCAT(a_f_name, ' ', a_l_name) as 'Student Name', a_email as 'Email', a_phone_mobile, a_gender as 'Gender', a_type as 'Sit/Serve', co.c_name as 'Country', s.s_name as 'State',  cr.c_name as 'CourseName', DATE_FORMAT(cr.c_start, '%d %b') as 'CourseStart', DATE_FORMAT(cr.c_end, '%d %b, %Y') as 'CourseEnd', td.td_val1 as 'CourseType', ce.c_name as 'Centre', al.al_recommending_approved, al.al_area_at_approved, DATEDIFF(CURDATE(), cr.c_start) as 'diff',
		al.al_recommending, al.al_area_at,
		a_uri, a_id
		from dh_applicant_lc al left join dh_applicant a on (al.al_applicant=a.a_id) left join dh_country co on a.a_country=co.c_code left join dh_state s on (a.a_country=s.s_country and a.a_state=s.s_code) left join dh_center ce on (a.a_center=ce.c_id) left join dh_course cr on a.a_course=cr.c_id left join dh_type_detail td on cr.c_course_type=td.td_id where $where
		  and td.td_val3 = 'LC' and DATEDIFF(CURDATE(), cr.c_start) <= $diff_days  order by a_created desc";
	$result = db_query($q, $where_opts);
	$rows_completed = $rows_pending = array();
	while( $r = $result->fetchAssoc() )
	{
		unset($rs);
		$rs = array();
		//if ($r['diff'] <= 0)
		$rs['detail_link'] = l('Details', "lc-review/app/".$r['a_id']);
		if (user_access('approve applications on behalf of at') || user_access("approve applications"))
		{
			$rs['RStatus'] = $r['al_recommending']."<br>".dh_atportal_make_pretty($r['al_recommending_approved']);
			$rs['AStatus'] = $r['al_area_at']."<br>".dh_atportal_make_pretty($r['al_area_at_approved']);
		}
		else
		{
			$rs['RStatus'] = dh_atportal_make_pretty($r['al_recommending_approved']);
			$rs['AStatus'] = dh_atportal_make_pretty($r['al_area_at_approved']);
		}
		$rs['Centre'] = $r['Centre'];
		$rs['CourseType'] = $r['CourseType'];
		$rs['CourseDt'] = $r['CourseStart']." - ".$r['CourseEnd'];
		$pdf_link = '';
		if ( $r['a_uri'] <> '' )
			$pdf_link = '&nbsp;('.l("PDF", "show-application-at/".$r['a_id'], array('attributes' => array("target" => "_blank") ) ).')';

		$rs['NameDetails'] = $r['Student Name'].$pdf_link."<br>".$r['Gender']."&nbsp;|&nbsp;".(($r['Sit/Serve']=='Student')?'Sit':'Serve');
		$rs['Email'] = $r['Email']."<br>".$r['a_phone_mobile'];
		$rs['Location'] = $r['Country'].", ".$r['State'];
		if ($r['diff'] > 0)
			$rows_completed[] = $rs; //array_values($rs);
		else
			$rows_pending[] = $rs; //array_values($rs);
	}	

	$header = array('Action', 'Reco AT', 'Area AT', 'Centre', 'CourseType', 'Course Start/End', 'Applicant Name', 'Email/Contact',  'Country/State');
	$attributes = array('id' => 'applications-pending');

	//$out = theme('table', array('header' => $header, 'rows' => $rows_pending, 'attributes' => $attributes));
	$out = theme('table', array('header' => $header, 'rows' => array(), 'attributes' => $attributes));
	$form['a'] = array('#markup' => '<h2>Pending Courses</h2>'.$out);
	$data_pending = json_encode($rows_pending);
	//$header = array('Reco AT', 'Area AT', 'Centre', 'CourseType', 'Course Start/End', 'Applicant Name', 'Email/Contact',  'Country/State');
	$attributes = array('id' => 'applications-completed');
	//$out = theme('table', array('header' => $header, 'rows' => $rows_completed, 'attributes' => $attributes));
	$out = theme('table', array('header' => $header, 'rows' => array(), 'attributes' => $attributes));
	$data_completed = json_encode($rows_completed);
	$form['b'] = array('#type' => 'fieldset','#title' => '<h2>Completed Courses - Click to open</h2>' , '#collapsible' => true, '#collapsed' => true);
	$form['b']['c'] = array('#markup' => $out);
	

	$js = '
		(function ($) {
			function do_datatable( tid, data )
			{
				var table = $(tid).DataTable({
					dom: "lfr<\"clear\">tip", 
					data: data,
					"columnDefs": [
					            {
					                "targets": [ 0 ],
					                "searchable": false
					            }
			        ],					
			        columns: [
			            { data: "detail_link", "title" : "Action" },
			            { data: "RStatus", "title" : "Reco AT" },
			            { data: "AStatus", "title" : "Area AT" },
			            { data: "Centre", "title" : "Centre" },
				        { data: "CourseType", "title" : "CourseType"},
				        { data: "CourseDt", "title" : "Course Start/End"},
				        { data: "NameDetails", "title" : "Applicant Name"},
				        { data: "Email", "title" : "Email/Contact"},
						{ data: "Location", "title" : "Country/State"},
			        ],
			    });			
			}
			$(document).ready(function(){
				var dataset_pending = '.$data_pending.';
				var dataset_complete = '.$data_completed.';
				do_datatable("#applications-pending", dataset_pending);
				do_datatable("#applications-completed", dataset_complete);
			});
		})(jQuery);

	';
	drupal_add_js($js, 'inline');
	return $form;
}

function dh_atportal_review_form($form, &$form_state, $appid )
{
	global $user;
	drupal_add_css(drupal_get_path('module', 'dh_manageapp').'/css/select2.min.css');
	drupal_add_js(drupal_get_path('module', 'dh_manageapp').'/js/select2.min.js');


	$at_names = array();
	if (user_access('approve applications on behalf of at') && (! user_access("approve applications")))
	{
		$at_names = dh_atportal_get_ats_assigned();
	}
	$at_code = $user->name;
	$q = "select CONCAT(t_f_name, ' ', t_l_name) from dh_teacher where t_status='Active' and CONCAT(t_code,'.',t_gender) = '$at_code' limit 1";
	$at_name = db_query($q)->fetchField();

	if ($at_name)
		$at_names[] = $at_name;

	$q = "select CONCAT(a_f_name, ' ', a_m_name, ' ', a_l_name) as 'Name', a_id, a_center, a_course, c.c_name, c.c_start, a_status,a_city_str, a_photo,  
		co.c_name as 'Country', s.s_name as 'State', cci.c_name as 'City', a_email, a_phone_mobile, DATE_FORMAT(a_dob, '%d %b, %Y' ) as 'DOB', TIMESTAMPDIFF( YEAR, a_dob, CURDATE() ) as 'Age', a_uri,  
		ac.*, al.* from dh_applicant a left join dh_course c on (a.a_course=c.c_id) left join dh_applicant_lc al on (a_id=al_applicant) left join dh_applicant_course ac on (a_id=ac_applicant) left join dh_country co on a.a_country=co.c_code left join dh_state s on (a.a_country=s.s_country and a.a_state=s.s_code) left join dh_city cci on a.a_city=cci.c_id where  a_id =$appid";
	$result = db_query($q);
	$r = $result->fetchAssoc();

	$ret = s3_get_file(variable_get('s3_bucket_name', ''), str_replace('private://', '', $r['a_photo']), 'stream');
	if (!$ret['success'])
		watchdog('S3Photo', $ret['message']);

	if ($r['City'] == '')
		$r['City'] = $r['a_city_str'];
	if ($r['a_photo'])
		$r['a_photo'] = base64_encode($ret['data']); //file_create_url($r['a_photo']);
	$pdf_link = '';
	if ( $r['a_uri'] <> '' )
		$pdf_link = '&nbsp;('.l("PDF", "show-application-at/".$appid, array('attributes' => array("target" => "_blank") ) ).')';
		$r['a_uri'] = $pdf_link;
	$r['al_reco_status'] = dh_atportal_make_pretty($r['al_recommending_approved']);
	if ($r['al_recommending'])
		$r['al_reco_status'] .= "&nbsp;&nbsp;(&nbsp;".$r['al_recommending']."&nbsp;)";
	$r['al_area_status'] = dh_atportal_make_pretty($r['al_area_at_approved']);
	if ($r['al_area_at'])
		$r['al_area_status'] .= "&nbsp;&nbsp;(&nbsp;".$r['al_area_at']."&nbsp;)";
	$out = theme('lc-review', array('data' => $r));
	$form = array();
	$form['a'] = array('#markup' => $out);


	$q = "select l_msg , name, l_tstamp from dh_log left join users on l_user=uid where l_module='Applicant' and l_identifier='".$r['a_id']."' and l_event in ('Status Change', 'Letter', 'LC Workflow') order by l_tstamp desc";
	$res = db_query($q);
	$rows = array();
	while( $row = $res->fetchAssoc())
	{
		$l = array();
		$l[] = $row['l_tstamp'];
		$l[] = $row['l_msg'];
		$l[] = $row['name'];
		$rows[] = $l;
	}
	$header = array('DateTime', 'Activity', 'User');
	$out = '';
	if (!empty($rows))
		$out .= theme('table', array('header' => $header, 'rows' => $rows)) ;

	$form['b'] = array('#type' => 'fieldset','#title' => '<h2>Activity Log - Click to open</h2>' , '#collapsible' => true, '#collapsed' => true);
	$form['b']['c'] = array('#markup' => $out);

	$today = date('Y-m-d');
	if ( $today > $r['c_start'] )
		return $form;

	$owner = False;
	$reco_done = False; $area_done = False;
	if (in_array($r['al_recommending_approved'], array('Approved', 'Rejected')))
		$reco_done = True;


	if (in_array($r['al_area_at_approved'], array('Approved', 'Rejected')))
		$area_done = True;

	if ($area_done && in_array($r['al_area_at'], $at_names) )
		return $form;

	if ($reco_done && in_array($r['al_recommending'], $at_names) && (!in_array($r['al_area_at'], $at_names)))
		return $form;

	if (in_array($r['al_recommending'], $at_names) || in_array($r['al_area_at'], $at_names) )
		$owner = True;

	if ($reco_done && $area_done && (!user_access('approve applications'))  )
		return $form;

	if ( (!$owner) && (! user_access("approve applications")) )
		return $form;
	//drupal_set_message("Rdone: ".$reco_done." ($at_name | ".$r['al_recommending'].")");

	$options_area_t = db_query("select CONCAT(t_f_name, ' ', t_l_name) as 'name', CONCAT(t_f_name, ' ', t_l_name, '  ', IF(t_area != '', CONCAT('(',t_area,')'), '')) as 'area' from dh_teacher where (t_cat=1 or t_full_t=1 or t_lc_area=1) and t_status='Active' order by t_f_name, t_l_name")->fetchAllKeyed();
	$options_area_t[''] = 'Select CAT/T';
	$form['action'] = array('#title' => 'Action', '#type' => 'select',  '#options' => array( '' => 'Choose Action', 
		'Approved' => 'Approve', 'Rejected' => 'Reject', 'Transfer to Registrar' => 'Transfer to Registrar'));

	if (user_access('approve applications'))
	{
		$options_reco_t = db_query("select CONCAT(t_f_name, ' ', t_l_name) as 'name', CONCAT(t_f_name, ' ', t_l_name, '  ', IF(t_area != '', CONCAT('(',t_area,')'), '')) as 'area' from dh_teacher where t_status='Active' order by t_f_name, t_l_name")->fetchAllKeyed();
		$options_reco_t[''] = 'Select Recommending AT';
		$form['reco_teacher'] = array('#type' => 'select', '#options' => $options_reco_t, '#title' => 'Select Recommending AT');	
		$form['reco_action'] = $form['action'];
		unset($form['action']);
		unset($form['reco_action']['#options']['Transfer to Registrar']);
		$form['reco_action']['#title'] = 'Recommending AT Action';
		$form['reco_comments'] = array('#type' => 'textarea', '#rows' => 3, '#title' => 'Recommending AT Comments');

		$form['area_teacher'] = array('#type' => 'select', '#options' => $options_area_t, '#title' => 'Select Area Teacher');
		$form['area_action'] = $form['reco_action'];
		$form['area_action']['#title'] = 'AreaT Action';
		$form['area_comments'] = array('#type' => 'textarea', '#rows' => 3, '#title' => 'AreaT Comments');

	}
	else
	{
		if (!$reco_done)
		{
			$form['area_teacher'] = array('#type' => 'select', '#options' => $options_area_t, '#title' => 'Select Area Teacher'); // '#required' => True
		}
		if ($reco_done)
		{
			unset($form['action']['#options']['Transfer to Registrar']);
		}
		$form['comments'] = array('#type' => 'textarea', '#rows' => 3, '#title' => 'Comments');
	}


	$form['sub'] = array('#type' => 'submit',  '#value' => 'Submit Review');

	$js = '
		(function ($) {
			function check_required( sel, val )
			{
				var a = sel+"-comments";
				console.log(a);
				if ((val == "Approved") || (val == "Transfer to Registrar"))
				{
					$("label[for="+a+"]").text("Comments");
					$("#"+a).attr("required", false);
				}
				else if (val == "Rejected")
				{
					$("label[for="+a+"]").text("Rejection Reason");
					$("#"+a).attr("required", true);
				}

				if ((val != "Approved") && (sel == "edit"))
				{
					$("#edit-area-teacher").attr("required", false);
					$(".form-item-area-teacher").hide();	
				}
				else if ((val == "Approved") && (sel == "edit"))
				{
					$("#edit-area-teacher").attr("required", true);
					$(".form-item-area-teacher").show();
				}
			}
			$(document).ready(function(){
				$("#edit-area-teacher").select2();
				$("#edit-reco-teacher").select2();
				$("#edit-action,#edit-reco-action,#edit-area-action").change(function(){
					check_required($(this).attr("id").replace("-action", ""), $(this).val());
				});
				$("#edit-sub").click(function(){
					if (($("#edit-action").val() == "Approved") || ($("#edit-reco-action").val() == "Approved"))
					{
						if ($("#edit-area-teacher").val() == "")
						{
							alert("Please select Area Teacher");
							return false;
						}
					}
					return true;
				});
			});
		})(jQuery);
	';
	drupal_add_js($js, 'inline');

	return $form;
}


function dh_atportal_review_form_submit($form, &$form_state )
{
	global $user;
	drupal_set_message(t('Application updated successfully'));
	$input = $form_state['input'];	
	$app = array();
	if (user_access('approve applications'))
	{
		if ($input['reco_teacher'] <> '')
			$app['al_recommending'] = $input['reco_teacher'];
		
		if ($input['reco_action'] <> '')
			$app['al_recommending_approved'] = $input['reco_action'];

		if ($input['reco_comments'] <> '')
			$app['al_recommending_comments'] = $input['reco_comments'];

		if ($input['area_teacher'] <> '')
			$app['al_area_at'] = $input['area_teacher'];

		if ($input['area_action'] <> '')
			$app['al_area_at_approved'] = $input['area_action'];

		if ($input['area_comments'] <> '')
			$app['al_area_at_comments'] = $input['area_comments'];
	}
	else
	{
		if (isset($input['area_teacher']))
		{
			$app['al_area_at'] = $input['area_teacher'];
			$app['al_recommending_approved'] = $input['action'];
			$app['al_recommending_comments'] = $input['comments'];
		}
		else
		{
			$app['al_area_at_approved'] = $input['action'];
			$app['al_area_at_comments'] = $input['comments'];
		}		
	}
	$lc_id = arg(2);
	db_update('dh_applicant')->fields(array('a_updated_by' => $user->uid))->condition('a_id', $lc_id)->execute();
	db_update('dh_applicant_lc')->fields($app)->condition('al_applicant', $lc_id)->execute();

	$q = "select al_recommending_approved, al_area_at_approved from dh_applicant_lc where al_applicant=$lc_id";
	$row = db_query($q)->fetchAssoc();
	if ($row)
	{
		$new_status = '';
		switch($row['al_area_at_approved'])
		{
			case 'Approved':
				$new_status = 'Received';
				break;
			case 'Rejected':
				$new_status = 'Rejected-A-AT';
				break;
			case 'Pending':
				if ($row['al_recommending_approved'] == 'Approved')
					$new_status = 'A-ATReview';
				elseif ($row['al_recommending_approved'] == 'Rejected')
					$new_status = 'Rejected-R-AT';
				elseif ($row['al_recommending_approved'] == 'Transfer to Registrar')
					$new_status = 'R-ATTransfer';
				break;
			case 'Transfer to Registrar':
				break;
		}
		if ($new_status <> '')
		{
			// $cmd = "/usr/bin/php status-trigger.php $lc_id '$new_status'";
			// echo "$cmd";
			// exec($cmd);
      update_status_external($lc_id, $new_status);
		}
	}

	if (user_access('approve applications') || user_access('approve applications on behalf of at'))
		drupal_goto("lc-review/all");
	else
		drupal_goto("lc-review/me");
}

function show_lc_application_pdf( $app_id )
{
	show_application_pdf( $app_id );
}


function my_referral()
{
  global $user;

  $at_id = db_query("select t_id from dh_teacher where t_status='Active' and CONCAT(t_code,'.',t_gender) = '$user->name' limit 1")->fetchField();

  if (!$at_id)
  {
    drupal_set_message("This option is only available for AT", "error");
    drupal_goto("at-portal");
  }

  drupal_add_css( libraries_get_path("editor"). "/DataTables/datatables.min.css");
  drupal_add_js( libraries_get_path("editor").  "/DataTables/datatables.min.js");
  drupal_add_css( drupal_get_path('module', 'dh_manageapp'). "/css/jquery-confirm.min.css");
  drupal_add_js( drupal_get_path('module', 'dh_manageapp'). "/js/jquery-confirm.min.js");
  drupal_add_css(drupal_get_path('module', 'dh_manageapp').'/css/select2.min.css');
  drupal_add_js(drupal_get_path('module', 'dh_manageapp').'/js/select2.min.js');
  drupal_add_css(drupal_get_path('module', 'dh_manageapp').'/css/tables.css' );

  $out = '<h2>'.l("Back to AT-Portal", "/at-portal").'</h2>';


  $q = "select r_id, a.s_id, r_student, concat(s_f_name,' ',s_l_name) as 'Full Name', s_gender, s_city, ci.c_name as 'City', s.s_name as 'State', co.c_name as 'Country', s_address, s_zip, s_email, s_phone_home, s_phone_office, s_phone_mobile, s_passport, s_aadhar, s_voter_id, s_pancard, s_education, s_occupation, s_occupation_past, s_company, s_designation, s_department, s_photo, TIMESTAMPDIFF( YEAR, s_dob, CURDATE() ) as 'Age', sci_teen, sci_10d, sci_stp, sci_spl, sci_20d, sci_30d, sci_45d, sci_60d, sci_tsc, sci_teacher,sci_service, CONCAT( IFNULL(sci_first_year, ''),'-',IFNULL(sci_first_month, ''),'-',IFNULL(sci_first_day, ''), ', ', sci_first_location_str) as 'first_course', sc_desc_physical,  sc_desc_medication,  sc_desc_mental, sc_desc_other_technique, sc_addiction_current, sc_uri, r_listed_10d, r_listed_stp, r_listed_spl, r_listed_20d, r_listed_30d, r_listed_45d, r_listed_60d, r_listed_tsc, r_listed_10d_seva, r_listed_lc_seva, r_listed_longseva, r_listed_by, r_reason, r_start, r_end, r_deleted,
    concat(ifnull(t_f_name, ''), ' ', ifnull(t_l_name, ''), ' (', t_code, ')') as teacher, t_id as teacher_id
    from dh_student a
    left join dh_student_course sc on (a.s_id=sc_student)
    left join dh_student_course_input sci on (a.s_id=sci_student)
    left join dh_referral r on (a.s_id=r_student)
    left join dh_teacher t on (r.r_teacher=t.t_id)
    left join dh_country co on (s_country=co.c_code)
    left join dh_state s on (s_state = s.s_code and s.s_country = co.c_code)
    left join dh_city ci on (s_city=ci.c_id)
    where  (a.s_id=r_student) and
    (r_deleted = 0) and
    r_center=0 and
    r_teacher = $at_id
    group by a.s_id
    order by r.r_created";

  $result = db_query($q);
  $rows = array();
  while( $r = $result->fetchAssoc() )
  {
    unset($rs);

    $rs['sid'] = $r['s_id'];
    $rs['ref_id'] = $r['r_id'];
    $rs['name'] = $r['Full Name'];

    $rs['del'] = l("Delete", "at-portal/referral/delete/".$rs['ref_id'], array("attributes" => array("class" => array("ref-del")))) ;
    $rs['update'] = '<a href="#" class="ref-upd">Update</a>' ;


    $rs['ref_by_title'] = "not required";
    $rs['ref_by'] = "not required";


    $rs['gender'] = (strtoupper($r['s_gender'])=='M')?'Male':'Female';
    //if ($r['City'] == '')
    //  $r['City'] = $r['s_city_str'];
    $rs['location'] = $r['Country'].', '.$r['State'].', '.$r['City'];
    $rs['city'] = $r['City'];
    $rs['state'] = $r['State'];
    $rs['country'] = $r['Country'];
    $rs['pin'] = $r['s_zip'];
    $rs['age'] = $r['Age'];
    $rs['address'] = $r['s_address'];//." - ".$r['s_zip'];
    $rs['contact'] = '<label>H:&nbsp;</label>'.$r['s_phone_home']." <label>M:&nbsp;</label>".$r['s_phone_mobile']." <label>O:&nbsp;</label>".$r['s_phone_office']." <label>Email:&nbsp;</label>".$r['s_email'];
    $rs['contact_home'] = $r['s_phone_home'];
    $rs['contact_mobile'] = $r['s_phone_mobile'];
    $rs['contact_office'] = $r['s_phone_office'];
    $rs['contact_email'] = $r['s_email'];
    $rs['aadhar'] = $r['s_aadhar'];
    $rs['pancard'] = $r['s_pancard'];
    $rs['passport'] = $r['s_passport'];
    $rs['voter_id'] = $r['s_voter_id'];

    $rs['course_teen'] = $r['sci_teen']?$r['sci_teen']:"0";
    $rs['course_10d'] = $r['sci_10d']?$r['sci_10d']:"0";
    $rs['course_stp'] = $r['sci_stp']?$r['sci_stp']:"0";
    $rs['course_spl'] = $r['sci_spl']?$r['sci_spl']:"0";
    $rs['course_20d'] = $r['sci_20d']?$r['sci_20d']:"0";
    $rs['course_30d'] = $r['sci_30d']?$r['sci_30d']:"0";
    $rs['course_45d'] = $r['sci_45d']?$r['sci_45d']:"0";
    $rs['course_60d'] = $r['sci_60d']?$r['sci_60d']:"0";
    $rs['course_tsc'] = $r['sci_tsc']?$r['sci_tsc']:"0";
    $rs['course_seva'] = $r['sci_service']?$r['sci_service']:"0";

    $rs['first_course'] = $rs['last_course'] = '';

    $rs['ref_10d'] = $r['r_listed_10d']?"Yes":"No";
    $rs['ref_stp'] = $r['r_listed_stp']?"Yes":"No";
    $rs['ref_spl'] = $r['r_listed_spl']?"Yes":"No";
    $rs['ref_20d'] = $r['r_listed_20d']?"Yes":"No";
    $rs['ref_30d'] = $r['r_listed_30d']?"Yes":"No";
    $rs['ref_45d'] = $r['r_listed_45d']?"Yes":"No";
    $rs['ref_60d'] = $r['r_listed_60d']?"Yes":"No";
    $rs['ref_tsc'] = $r['r_listed_tsc']?"Yes":"No";
    $rs['ref_10dseva'] = $r['r_listed_10d_seva']?"Yes":"No";
    $rs['ref_lcseva'] = $r['r_listed_lc_seva']?"Yes":"No";
    $rs['ref_longseva'] = $r['r_listed_longseva']?"Yes":"No";
    $rs['ref_reason'] = $r['r_reason'];
    $rs['ref_start'] = $r['r_start'];
    $rs['ref_end'] = $r['r_end'];

    $rs['Education'] = $r['s_education'];
    $rs['Company'] = $r['s_company'];
    $rs['Dept'] = $r['s_department'];
    $rs['Occ'] = $r['s_occupation'];
    if ($r['s_occupation'] == '')
      $rs['Occ'] = $r['s_occupation_past'];
    $rs['Designation'] = $r['s_designation'];
    $rs['othertechnique'] = $r['sc_desc_other_technique']?$r['sc_desc_other_technique']:"";
    $rs['physical'] = $r['sc_desc_physical']?$r['sc_desc_physical']:"";
    $rs['mental'] = $r['sc_desc_mental']?$r['sc_desc_mental']:"";
    $rs['medication'] = $r['sc_desc_medication']?$r['sc_desc_medication']:"";
    $rs['addiction'] = $r['sc_addiction_current']?$r['sc_addiction_current']:"";
    $rs['photo'] = '';
    if ( $r['s_photo'] <> '')
      $rs['photo'] = file_create_url($r['s_photo']);
    //$rows[] = array_values($rs);

    $rows[] = $rs;
  }

  $header = array();
  $attributes = array('id' => 'table-applicants');
  $out .= theme('table', array('header' => $header, 'rows' => array(), 'attributes' => $attributes));
  $data = json_encode($rows);


  $button_access = '';
  if (user_access('export data'))
    if ( !($iPad || $iPhone || $iPod) )
      $button_access = '
        $.extend( true, {}, buttonCommon, {
                extend: "excelHtml5",
                title: "Student Data"
        } )
      ';

  $js = '
    function format ( d ) {
      var pregnant = "", photo = "";
      if ( d.photo )
      {
        photo = "<td colspan=2><img width=\"150\" src=\""+d.photo+"\" /></td>";
      }
        return "<div class=\"slider\">"+
            "<table cellpadding=\"5\" cellspacing=\"0\" border=\"0\" style=\"padding-left:50px;\">"+
                "<tr>"+
                    "<td><label>Gender:</label></td>"+
                    "<td>"+d.gender+"</td>"+
                    "<td><label>Age:</label></td>"+
                    "<td>"+d.age+"</td>"+
                "</tr>"+
                "<tr>"+
                    "<td><label>Address:</label></td>"+
                    "<td colspan=\"3\">"+d.address+", "+d.location+"</td>"+
                 "</tr>"+
                 "<tr>"+
                    "<td><label>Contact:</label></td>"+
                    "<td colspan=\"3\">"+d.contact+"</td>"+
                "</tr>"+
                "<tr>"+
                    "<td><label>Pancard:</label></td>"+
                    "<td colspan=\"3\">"+d.pancard+"</td>"+
                "</tr>"+
                "<tr>"+
                    "<td><label>Aadhar:</label></td>"+
                    "<td colspan=\"3\">"+d.aadhar+"</td>"+
                "</tr>"+
                "<tr>"+
                    "<td><label>National ID:</label></td>"+
                    "<td colspan=\"3\">"+d.voter_id+"</td>"+
                "</tr>"+
                "<tr>"+
                    "<td><label>Passport:</label></td>"+
                    "<td colspan=\"3\">"+d.passport+"</td>"+
                "</tr>"+
                "<tr>"+
                    "<td><label>Occupation/Edu:</label></td>"+
                    "<td>"+d.Occ+"/"+d.Education +"</td>"+
                    "<td><label>Company:</label></td>"+
                    "<td>"+d.Company+"</td>"+
                "</tr>"+
                "<tr>"+
                  "<td><label>Designation:</label></td>"+
                    "<td>"+d.Designation+"</td>"+
                    "<td><label>Department:</label></td>"+
                    "<td>"+d.Dept+"</td>"+photo+
                "</tr>"+
                "<tr>"+
                  "<td><label>Referral listed for:</label></td>"+
                    "<td><table><tr><td>10d</td><td>STP</td><td>SPL</td><td>20d</td><td>30d</td><td>45d</td><td>60d</td><td>TSC</td><td>10-Day Seva</td><td>LC Seva</td><td>Long Term Seva</td></tr>"+
                    "<tr><td>"+d.ref_10d+"</td><td>"+d.ref_stp+"</td><td>"+d.ref_spl+"</td><td>"+d.ref_20d+"</td><td>"+d.ref_30d+"</td><td>"+d.ref_45d+"</td><td>"+d.ref_60d+"</td><td>"+d.ref_tsc+"</td><td>"+d.ref_10dseva+"</td><td>"+d.ref_lcseva+"</td><td>"+d.ref_longseva+"</td></tr></table></td>"+
                "</tr>"+
                "<tr>"+
                    "<td><label>Reason/Remarks:</label></td>"+
                    "<td>"+d.ref_reason+"</td>"+
                "</tr>"+
                "<tr>"+
                  "<td><label>Course Information:</label></td>"+
                    "<td><table><tr><td>Teen</td><td>10d</td><td>STP</td><td>SPL</td><td>TSC</td><td>20d</td><td>30d</td><td>45d</td><td>60d</td><td>Seva</td></tr>"+
                    "<tr><td>"+d.course_teen+"</td><td>"+d.course_10d+"</td><td>"+d.course_stp+"</td><td>"+d.course_spl+"</td><td>"+d.course_tsc+"</td><td>"+d.course_20d+"</td><td>"+d.course_30d+"</td><td>"+d.course_45d+"</td><td>"+d.course_60d+"</td><td>"+d.course_seva+"</td></tr></table></td>"+
                "</tr>"+
                "<tr>"+
                "<td colspan=4><div class=\"activity-log-"+d.ref_id+"\">Loading Activity Log...</div></td>"+
                "</tr>"+
            "</table>"+
        "</div>";
    }

    (function ($) {
      $(document).ready(function(){

        var dataset = '.$data.';

        var table = $("#table-applicants").DataTable({
          data: dataset,
              columns: [
                  {
                      "class":          "details-control",
                      "orderable":      false,
                      "data":           null,
                      "title":      "Detail",
                      "defaultContent": ""
                  },
                  { data: "name", "title" : "Applicant Name" },
                { data: "ref_start", "title" : "Start Date" },
                { data: "ref_end", "title" : "End Date" },
                { data: "update", "title" : "update" },
                { data: "del", "title" : "Delete" },
                ],
        });

          // Add event listener for opening and closing details
          $("#table-applicants tbody").on("click", "td.details-control", function () {
              var tr = $(this).closest("tr");
              var row = table.row( tr );

              if ( row.child.isShown() ) {
                  // This row is already open - close it
                  $("div.slider", row.child()).slideUp( function () {
                      row.child.hide();
                      tr.removeClass("shown");
                  });
              }
              else {
                  // Open this row
                  row.child( format(row.data()), "no-padding" ).show();
                  tr.addClass("shown");

                  $("div.slider", row.child()).slideDown();
                  $(".activity-log-"+row.data().ref_id).load("/referral/get-activity/"+row.data().ref_id);
              }
          });


          $("#table-applicants tbody").on("click", ".ref-upd", function() {
          var tr = $(this).closest("tr");
          var row = table.row( tr );



          console.log(row.data().ref_end);

           $.confirm({
              title: "Update Referral",
              content: "" +
                "<form action=\"\" class=\"formName\">" +
                "<div class=\"form-group\">" +
                "<label style=\"display:block;\">Referral End-date</label>" +
                "<input type=\"date\" id=\"select-date\" value=\""+row.data().ref_end+"\" required>" +
                "<br/><br/><label style=\"display:block;\">Add Referral Comment</label>"+
                "<textarea name=\"comment\" id=\"txt-comment\"></textarea>"+
                "</div>" +
                "</form>",
              buttons: {
                  Ok: {
                      text: "Ok",
                      btnClass: "btn-blue",
                      action: function () {

                        ref_end_date = this.$content.find("#select-date").val();
                        ref_comment = this.$content.find("#txt-comment").val();

                    $.getJSON( "/at-portal/referral/update/"+row.data().ref_id, { ref_end_date: ref_end_date, ref_comment: ref_comment } )
                    .done(function( json ) {
                      if (json.status == "OK")
                      {
                        row_data = row.data();
                        row_data.ref_end = ref_end_date;
                        row.data(row_data);
                        alert(json.msg)
                      }
                      else
                        alert("Update failed!\n"+json.msg)
                    })
                    .fail(function( jqxhr, textStatus, error ) {
                      var err = textStatus + ", " + error;
                      alert("Error updating "+err);
                  });

                      }
                  },
                  Cancel: function () {
                      //close
                  },
              },
              onContentReady: function () {
                  // bind to events
                  var jc = this;
                  this.$content.find("form").on("submit", function (e) {
                      // if the user submits the form by pressing enter in the field.
                      e.preventDefault();
                      jc.$$formSubmit.trigger("click"); // reference the button and click it
                  });
              }
          });

        });


        $("#table-applicants tbody").on("click", ".ref-del", function() {
          return confirm("Are you sure you want to delete Referral?");
        });



      });
    })(jQuery);

  ';
  drupal_add_js($js, 'inline');
  return $out;

}



function at_referral_delete( $id )
{
  global $user;

  $fields['r_updated_by'] = $user->uid;
  $fields['r_updated'] = date('Y-m-d H:i:s');
  $fields['r_deleted'] = 1;

  db_update('dh_referral')->fields($fields)->condition('r_id', $id )->execute();

  db_query("update dh_applicant set a_referral=0 where a_referral=$id");

  drupal_set_message("Referral delete successfully.");

  drupal_goto ('at-portal/my-referral');
}


function at_referral_update($ref_id)
{

  $out = array();
  $out['status'] = 'OK';
  $out['msg'] ="";

  $end_date = date_create($_REQUEST['ref_end_date']);
  $ref_comment = $_REQUEST['ref_comment'];

  if ( !$end_date )
  {
    $out['status'] = 'Failed';
    $out['msg'] ="End date is not a valid date.";
    drupal_json_output($out);
    exit;
  }

  if ( $end_date > date_create('+2 years') )
  {
    $out['status'] = 'Failed';
    $out['msg'] ="End date cannot be more then 2 years from current date.";
    drupal_json_output($out);
    exit;
  }

  $old_end_date = db_query("select r_end from dh_referral where r_id=$ref_id")->fetchField();
  db_update('dh_referral')->fields(array('r_end' => $end_date->format('Y-m-d')))->condition('r_id', $ref_id)->execute();
  add_referral_activity($ref_id, "Comment", $ref_comment);
  add_referral_activity($ref_id, "End-Date", "End-Date updated from $old_end_date to".$end_date->format('Y-m-d'));

  $out['msg'] ="Referral End-date/Commnet updated successfully.";

  drupal_json_output($out);
  exit;
}


function at_meet()
{

  global $user;

  $at_id = db_query("select t_id from dh_teacher where t_status='Active' and CONCAT(t_code,'.',t_gender) = '$user->name' limit 1")->fetchField();

  if (!$at_id)
  {
    drupal_set_message("This option is only available for AT", "error");
    drupal_goto("at-portal");
  }


  $q = "select co.c_id as 'course_id', c.c_id as 'center_id', co.c_name as 'course_name', co.c_start as 'course_start', co.c_end as 'course_end'  FROM dh_course co left join dh_center c on co.c_center=c.c_id where co.c_course_type=70 and co.c_start >= curdate() and co.c_list_only=1 and c.c_at_meet=1 and co.c_deleted=0 and co.c_cancelled=0 order by co.c_start asc";

  $res = db_query($q);
  $rows = array();
  while($r = $res->fetchAssoc())
  {
    $r['apply-link'] = "<button class=\"apply-for-at-meet\" type=\"button\">Apply</button>";
    $rows[]=$r;
  }

  $out = theme('table', array('rows' => array(), 'attributes' => array('id' => 'at-meet')));

  $data = json_encode($rows);



  $js = '
    (function ($) {
      function do_datatable( tid, data )
      {
        var table = $(tid).DataTable({
          dom: "lfr<\"clear\">tip",
          data: data,
          responsive: {
                  details: {
                      display: $.fn.dataTable.Responsive.display.childRowImmediate,
                      type: "none",
                      target: ""
                  }
              },
          destroy: true,
          "ordering": false,
          "oLanguage": {"sEmptyTable": "No AT Meeting found."},
          searching: false,
          "columnDefs": [
                      {
                          "targets": [ 0 ],
                          "searchable": false
                      }
              ],
              columns: [
                  { data: "apply-link", "title" : "Action" },
                  { data: "course_name", "title" : "AT Meeting/Workshop" },
                  { data: "course_start", "title" : "Start Date" },
                  { data: "course_end", "title" : "End Date" },
              ],
          });




        $("#at-meet tbody").on("click", ".apply-for-at-meet", function() {

          var tr = $(this).closest("tr");
          var row = table.row( tr );
          course_id = row.data().course_id;
          center_id = row.data().center_id;

           $.confirm({
              title: "Apply for "+row.data().course_name,
              content:  "<form action=\"\" class=\"formName\">" +
                "<div class=\"form-group\">" +
                "<label>Specific Requirement/Need/Request(e.g chair, chowky or any other)</label>"+
                "<textarea name=\"comment\" id=\"txt-comment\" rows=\"4\"></textarea>"+
                "<label>Emergency Contact Person Name</label>"+
                "<input type=\"text\" name=\"emergency-person\" id=\"emergency-person\" required>"+
                "<label>Emergency Contact Person Number</label>"+
                "<input type=\"text\" name=\"emergency-number\" id=\"emergency-number\" required>"+
                "<label>Date and time of arrival at the centre</label>"+
                "<input type=\"text\" name=\"arrival\" id=\"arrival\" required>"+
                "<label>Date when you will be leaving the centre</label>"+
                "<input type=\"text\" name=\"leaving\" id=\"leaving\" required>"+
                "</div>" +
                "</form>",
              buttons: {
                  Ok: {
                      text: "Ok",
                      btnClass: "btn-blue",
                      action: function () {


                          comment = this.$content.find("#txt-comment").val();
                          emergency_person = this.$content.find("#emergency-person").val();
                          if(!emergency_person){
                              $.alert("Please enter Emergency Contact Person Name");
                              return false;
                          }
                          emergency_number= this.$content.find("#emergency-number").val();
                          if(!emergency_number){
                              $.alert("Please enter Emergency Contact Person Number");
                              return false;
                          }
                          arrival= this.$content.find("#arrival").val();
                          if(!arrival){
                              $.alert("Please enter Arrival Date and Time");
                              return false;
                          }
                          leaving= this.$content.find("#leaving").val();
                          if(!leaving){
                              $.alert("Please enter Leaving Date");
                              return false;
                          }


                          $.getJSON( "/at-portal/at-meet/"+center_id+"/"+course_id, { emergency_person: emergency_person, comment: comment, emergency_number: emergency_number, arrival: arrival, leaving: leaving } )
                    .done(function( json ) {
                      if (json.status == "OK")
                      {
                        alert(json.msg)
                      }
                      else
                        alert("Not able to apply for AT Meeting/Workshop<br>"+json.msg)
                    })
                    .fail(function( jqxhr, textStatus, error ) {
                      var err = textStatus + ", " + error;
                      alert("Error in applying for AT Meeting/Workshop "+err);
                  });


                      }
                  },
                  Cancel: function () {
                      //close
                  },
              },
              onContentReady: function () {
                  // bind to events
                  var jc = this;
                  this.$content.find("form").on("submit", function (e) {
                      // if the user submits the form by pressing enter in the field.
                      e.preventDefault();
                      jc.$$formSubmit.trigger("click"); // reference the button and click it
                  });
              }
          });




        });




      }
      $(document).ready(function(){
        var dataset = '.$data.';
        do_datatable("#at-meet", dataset);
      });
    })(jQuery);
  ';

  drupal_add_js($js, 'inline');

  drupal_add_css( libraries_get_path("editor"). "/DataTables/datatables.min.css");
  drupal_add_js( libraries_get_path("editor").  "/DataTables/datatables.min.js");
  drupal_add_css( drupal_get_path('module', 'dh_manageapp'). "/css/jquery-confirm.min.css");
  drupal_add_js( drupal_get_path('module', 'dh_manageapp'). "/js/jquery-confirm.min.js");

  return $out;
}


function at_meet_apply()
{
  $out = array();
  $out['status'] = 'OK';
  $out['msg'] ="";

  global $user;

  $at_details = db_query("select * from dh_teacher where t_status='Active' and CONCAT(t_code,'.',t_gender) = '$user->name' limit 1")->fetchAssoc();

  if (!$at_details)
  {
    $out['status'] = 'Failed';
    $out['msg'] ="Only AT can apply for AT-Meetings";
    drupal_json_output($out);
    exit;
  }

  $ac_teacher_code=strtoupper(str_replace('.', '-', $user->name));


  $center = arg(2);
  $course = arg(3);
  $emergency_person = $_REQUEST['emergency_person'];
  $emergency_number = $_REQUEST['emergency_number'];
  $comment = "Arrival Info: ".$_REQUEST['arrival']."\n".
      "Leaving Info: ".$_REQUEST['leaving']."\n".$_REQUEST['comment'];



  $q = "select co.c_id  FROM dh_course co left join dh_center c on co.c_center=c.c_id where co.c_course_type=70 and co.c_start >= curdate() and co.c_list_only=1 and c.c_at_meet=1 and co.c_deleted=0 and co.c_cancelled=0 and c.c_id=:center and co.c_id=:course order by co.c_start asc";

  $ret = db_query($q, array(":center" => $center, ":course" => $course))->fetchField();
  if(!$ret)
  {
    $out['status'] = 'Failed';
    $out['msg'] ="Invalid AT-Meeting";
    drupal_json_output($out);
    exit;
  }

  $applied = db_query("select a_id  FROM dh_applicant a left join dh_applicant_course ac on a.a_id=ac.ac_applicant where ac_teacher_code=:ac_teacher_code and a_course=:a_course and a_center=:a_center", array(":ac_teacher_code"=>$ac_teacher_code, ":a_course"=>$course, ":a_center"=>$center))->fetchField();

  if($applied)
  {
    $out['status'] = 'Failed';
    $out['msg'] = "Already applied for the course.";
    drupal_json_output($out);
    exit;
  }

  $app = array();
  $app_ac = array();

  $app['a_course'] = $course;
  $app['a_center'] = $center;
  $app['a_old'] = 1;
  $app['a_type'] = "Student";
  $app['a_status'] =  '';
  $app['a_source'] = 'AT-Portal';
  $app['a_created_by'] = $user->uid;
  $app['a_created'] = date('Y-m-d H:i:s');
  $app['a_updated_by'] = $user->uid;
  $app['a_updated'] = date('Y-m-d H:i:s');
  $app['a_attended'] = 0;

  $app['a_f_name'] = $at_details['t_f_name'];
  $app['a_m_name'] = "";
  $app['a_l_name'] = $at_details['t_l_name'];
  $app['a_address'] = $at_details['t_address'];
  $app['a_country'] = $at_details['t_country'];
  $app['a_phone_mobile'] = substr($at_details['t_mob_phone'],0,18);
  $app['a_email'] = $at_details['t_email'];
  $app['a_gender'] = $at_details['t_gender'];
  $app['a_dob'] = $at_details['t_dob'];
  $app['a_extra'] = $comment;
  $app['a_emergency_name'] = $emergency_person;
  $app['a_emergency_num'] = $emergency_number;

  if($at_details['t_full_t'])
    $at_type = "T";
  elseif($at_details['t_sat'])
    $at_type = "SAT";
  else
    $at_type = "AT";

  $app_ac['ac_teacher'] = 1;
  $app_ac['ac_teacher_code'] = $ac_teacher_code;
  $app_ac['ac_practice_details'] = $at_type;
  $app_ac['ac_10d'] = 1;

  $app_id = db_insert('dh_applicant')->fields($app)->execute();
  dh_send_letter('applicant', $app_id, $app['a_status'] );

  $app_ac['ac_applicant'] = $app_id;
  $app_ac['ac_updated_by'] = $app_ac['ac_created_by'] = $user->uid;
  $app_ac['ac_updated'] = $app_ac['ac_created'] = date('Y-m-d H:i:s');
  db_insert('dh_applicant_course')->fields($app_ac)->execute();

  $cmd = "/usr/bin/php status-trigger.php $app_id 'Received'";
  exec($cmd);

  $out['msg'] = "Application submitted successfully";
  drupal_json_output($out);
  exit;
}


function at_course_sit_list_form($form, &$form_state)
{

  global $user;
  $at_code = $user->name;

  $q = "select t_id, t_gender from dh_teacher where t_status='Active' and CONCAT(t_code,'.',t_gender) = '$at_code' limit 1";
  $row = db_query($q)->fetchAssoc();

  $at_id = $row['t_id'];
  $at_gender = $row['t_gender'];

  if (!$at_id)
  {
    drupal_set_message("Only AT can apply for courses.", "error");
    drupal_goto("at-portal");
  }

  $ac_teacher_code=strtoupper(str_replace('.', '-', $user->name));

  drupal_add_css( libraries_get_path("editor"). "/DataTables/datatables.min.css");
  drupal_add_js( libraries_get_path("editor").  "/DataTables/datatables.min.js");

  drupal_add_css(drupal_get_path('module', 'dh_manageapp').'/css/select2.min.css');
  drupal_add_js(drupal_get_path('module', 'dh_manageapp').'/js/select2.min.js');
  drupal_add_css( drupal_get_path('module', 'dh_manageapp'). "/css/jquery-confirm.min.css");
  drupal_add_js( drupal_get_path('module', 'dh_manageapp'). "/js/jquery-confirm.min.js");


  $form['at-portal'] = array(
      '#markup' => '<h2>'.l("Back to AT-Portal", "/at-portal").'</h2>',
  );


  $center = db_query("select concat('ce-', c_id), c_name from dh_center where c_mute=0")->fetchAllKeyed();
  $country = db_query("select concat('cy-', cy.c_id), cy.c_name from dh_center c left join dh_country cy on (c.c_country=cy.c_code)")->fetchAllKeyed();
  $state = db_query("select concat('st-', st.s_id), st.s_name from dh_center c left join dh_state st on (c.c_state=st.s_code AND c.c_country=st.s_country) ")->fetchAllKeyed();
  $city = db_query("select concat('ci-', ci.c_id), ci.c_name from dh_center c left join dh_city ci on (c.c_city=ci.c_id)")->fetchAllKeyed();

  $loc_options = array (
    "Center" => $center,
    "Country" => $country,
    "State" => $state,
    "City" => $city,
  );


  $course_type = db_query("select td_key, td_val1 from `dh_type_detail` where td_type='course-type'")->fetchAllKeyed();


  $form['from_date'] = array(
    '#type' => 'date_popup',
    '#default_value' => date('Y-m-d'),
    '#title' => t('From Date'),
    '#size' => 12,
    '#weight' => 5,
    '#date_format' => 'Y-m-d',
    '#date_year_range' => '+0:+4',
    '#date_label_position' => 'above',
    '#required' => 1,
    '#theme_wrappers' => array('date_popup'),
    '#datepicker_options' => array(
      'minDate' => 0,
      '#required' => 1,
      'dateFormat' => date_popup_format_to_popup('Y-m-d'),
    ),
    '#attributes' => array(
        'class' => array('from-date-class',),
    ),
  );

  $form['to_date'] = array(
    '#type' => 'date_popup',
    '#default_value' => date('Y-m-d', strtotime('+1 year')),
    '#title' => t('To Date'),
    '#size' => 12,
    '#weight' => 10,
    '#date_format' => 'Y-m-d',
    '#date_year_range' => '+0:+4',
    '#date_label_position' => 'above',
    '#required' => 1,
    '#theme_wrappers' => array('date_popup'),
    '#datepicker_options' => array(
      'minDate' => 0,
      '#required' => 1,
      'dateFormat' => date_popup_format_to_popup('Y-m-d'),
    ),
    '#attributes' => array(
        'class' => array('to-date-class',),
    ),
  );

  $form['location'] = array(
    '#title' => 'Centre / Country / Location / Place',
    '#type' => 'select',
    '#options' => $loc_options,
    '#weight' => 15,
    '#multiple' => "multiple",
    '#attributes' => array(
        'id' => 'edit-location',
    ),
  );

  $form['course-type'] = array('#title' => 'Course Type', '#type' => 'select', '#options' => $course_type, '#weight' => 20, '#multiple' => "multiple");

  $form['sub'] = array(
    '#type' => 'submit',
    '#value' => 'Search',
    '#weight' => 25,
    '#prefix' => '<br>',
    '#suffix' => '<br><br><br>',
  );

  $q = db_select('dh_course', 'co');
  $q->leftjoin('dh_center', 'ce', 'co.c_center=ce.c_id');
  $q->leftjoin('dh_country', 'cy', 'ce.c_country=cy.c_code');
  $q->leftjoin('dh_state', 'st', '(ce.c_state=st.s_code AND ce.c_country=st.s_country)');
  $q->leftjoin('dh_city', 'ci', 'ce.c_city=ci.c_id');
  $q->leftjoin('dh_type_detail', 'td', 'co.c_course_type=td.td_id');
  $q->addField('ce', 'c_id', 'center_id');
  $q->addField('ce', 'c_name', 'center_name');
  $q->addField('ce', 'c_subdomain', 'center_sub');
  $q->addField('td', 'td_val1', 'course_type');
  $q->addField('co', 'c_id', 'course_id');
  $q->addField('co', 'c_name', 'course_name');
  $q->addField('co', 'c_start', 'start_date');
  $q->addField('co', 'c_end', 'end_date');
  $q->addField('co', 'c_status_om', 'status_om');
  $q->addField('co', 'c_status_of', 'status_of');
  $q->addField('co', 'c_status_nm', 'status_nm');
  $q->addField('co', 'c_status_nf', 'status_nf');
  $q->addField('co', 'c_status_svr_m', 'status_svr_m');
  $q->addField('co', 'c_status_svr_f', 'status_svr_f');
  $q->addField('co', 'c_enrol_date', 'enrol_date');
  $q->addField('co', 'c_list_only', 'list_only');
  $q->addField('co', 'c_status', 'status');
  $q->addField('co', 'c_cancelled', 'cancelled');
  $q->addField('ci', 'c_name', 'city');
  $q->addField('st', 's_name', 'state');
  $q->condition('ce.c_mute', '0', '=');




  if (isset($form_state['user_input']) && $form_state['user_input'])
  {
    watchdog("testing2","<pre>".print_r($form_state['user_input'],true)."</pre>");

    $values = $form_state['user_input'];
    $location = array('center' => array(),
      'country' => array(),
      'state' => array(),
      'city' => array()
    );

    if($values['from_date']['date'])
    {
      $q->condition('co.c_start', $values['from_date']['date'], '>=');
    }

    if($values['to_date']['date'])
    {
      $q->condition('co.c_start', $values['to_date']['date'], '<=');
    }


    $location['center']=array();
    $location['country']=array();
    $location['state']=array();
    $location['city']=array();

    if (is_array($values['location']))
    {
      // $form['location']['#default_value'] = $values['location'];
      foreach ($values['location'] as $loc)
      {
        if ( substr($loc,0,3) == 'ce-')
          $location['center'][] = str_replace('ce-', '', $loc);
        if ( substr($loc,0,3) == 'cy-')
          $location['country'][] = str_replace('cy-', '', $loc);
        if ( substr($loc,0,3) == 'st-')
          $location['state'][] = str_replace('st-', '', $loc);
        if ( substr($loc,0,3) == 'ci-')
          $location['city'][] = str_replace('ci-', '', $loc);
      }
    }


    if (count($location['center'])>0 || count($location['country'])>0 || count($location['state'])>0 || count($location['city'])>0)
    {
      $or = db_or();

      if (count($location['center'])>0)
        $or->condition('ce.c_id', $location['center'], 'in');

      if (count($location['country'])>0)
        $or->condition('cy.c_id', $location['country'], 'in');

      if (count($location['state'])>0)
        $or->condition('st.s_id', $location['state'], 'in');

      if (count($location['city'])>0)
        $or->condition('ci.c_id', $location['city'], 'in');

      $q->condition($or);
    }


    if (is_array($values['course-type']))
    {
      $form['course-type']['#default_value'] = $values['course-type'];
      $q->condition('td.td_key', $values['course-type'], 'in');
    }

  }

  $q->condition('co.c_start', date('Y-m-d'), '>=');
  $q->condition('co.c_deleted', 0, '=');

  $q->orderBy("co.c_start", "asc");

  // drupal_set_message($q->__toString());
  // drupal_set_message(print_r($q->arguments(), true));
  $res = $q->execute();


  $today = date('Y-m-d');
  $css_mappings = array('Closed' => 'status-red', 'Course Full' => 'status-red', 'Filling Up' => 'status-yellow', 'FULL' => 'status-red','Long Wait List' => 'status-yellow', 'Open' => 'status-green', 'Short Wait List' => 'status-yellow', 'Wait List' => 'status-yellow');

  $rows = array();
  foreach ($res as $row) {

    $row = (array) $row;
    $row['course_status'] = "";
    if ($row['cancelled'])
    {
      $row = array_merge(array("apply-link"=>""), $row);
      $row['course_status'] = '<div class="status status-red">'.$row['status'].'</div>';
    }
    elseif (in_array($row['status'], array('Closed', 'Course Full', 'FULL')))
    {
      $row = array_merge(array("apply-link"=>""), $row);
      $row['course_status'] = '<div class="status status-red">Cancelled</div>';
    }
    elseif( $today <= $row['start_date'] && $today >= $row['enrol_date'] )
    {
      $row = array_merge(array("apply-link"=>"<button class=\"apply-at-sit-serve\" type=\"button\">Apply</button>"), $row);
      $s = array();
      $s['Old Male'] = $row['status_om'];
      $s['Old Female'] = $row['status_of'];
      $s['New Male'] = $row['status_nm'];
      $s['New Female'] = $row['status_nf'];
      $s['Server Male'] = $row['status_svr_m'];
      $s['Server Female'] = $row['status_svr_f'];
      $s['status'] = $row['status'];

      $uniq_status = array();
      foreach( $s as $k => $v )
      {
         $uniq_status[$v] = $v;
      }

      if ( (count($uniq_status) == 1) && (array_keys($uniq_status)[0] == 'Open') )
        $row['course_status'] = '<div class="status status-green">Open</div>';
      else
      {
        $course_type = $row['course_type'];
        foreach( $s as $k => $v )
        {
          if ($k <> 'status')
          {
            if (!in_array($course_type, array('10 Day Course', '10 Day Executive Course', 'Teenager Course', 'Children Course')) && in_array($k, array('New Male', 'New Female')))
            $row['course_status'] .= '<div class="status status-na">'.$k.' - N/A</div>';
          else
            $row['course_status'] .= '<div class="status '.$css_mappings[$v].'">'.$k.' - '.$s[$k].'</div>';
          }
        }
      }
    }
    else
    {
      $enrol_date = date('M j', strtotime($row['enrol_date']));
      $row['course_status'] = '<div class="status status-red">Applications accepted starting '.$enrol_date.'</div>';
      $row = array_merge(array("apply-link"=>""), $row);
    }



    $applied = db_query("select a_id  FROM dh_applicant a left join dh_applicant_course ac on a.a_id=ac.ac_applicant where ac_teacher_code=:ac_teacher_code and a_course=:a_course and a_center=:a_center", array(":ac_teacher_code"=>$ac_teacher_code, ":a_course"=>$row['course_id'], ":a_center"=>$row['center_id']))->fetchField();

    if ($applied)
      $row['apply-link'] = "Applied";

    $row['start_date'] = date('d M y', strtotime($row['start_date']));
    $row['end_date'] = date('d M y', strtotime($row['end_date']));

    $rows[] = $row;
  }


    $out = theme('table', array('rows' => array(), 'attributes' => array('id' => 'at-course-list')));

    $form['a'] = array('#markup' => $out, '#weight' => 101,);
    $data = json_encode($rows);



  $js = '
    (function ($) {
      function do_datatable( tid, data )
      {
        var table = $(tid).DataTable({
          dom: "lfr<\"clear\">tip",
          data: data,
          responsive: {
                  details: {
                      display: $.fn.dataTable.Responsive.display.childRowImmediate,
                      type: "none",
                      target: ""
                  }
              },
          destroy: true,
          "ordering": false,
          "oLanguage": {"sEmptyTable": "No Courses found for Search Criteria."},
          searching: false,
          "columnDefs": [
                      {
                          "targets": [ 0 ],
                          "searchable": false
                      }
              ],
              columns: [
                  { data: "apply-link", "title" : "Action" },
                  { data: "center_name", "title" : "Center" },
                  { data: "city", "title" : "City" },
                  { data: "state", "title" : "State" },
                  { data: "course_type", "title" : "Course Type" },
                  { data: "start_date", "title" : "Start Date" },
                { data: "end_date", "title" : "End Date"},
                { data: "course_status", "title" : "Course AT Status"},
              ],
          });




           $("#at-course-list tbody").on("click", ".apply-at-sit-serve", function() {

          var tr = $(this).closest("tr");
          var row = table.row( tr );
          course_id = row.data().course_id;
          center_id = row.data().center_id;

           $.confirm({
              title: "Apply for "+row.data().course_name,
              content:  "<form action=\"\" class=\"formName\">" +
                "<div class=\"form-group\">" +
                "<label>Application Type</label><br>"+
                "<input type=\"radio\" name=\"app-type\" id=\"sitting\" value=\"Student\" checked=\"app-type\"><label for=\"sitting\">Attend the course</label><br>"+
                "<input type=\"radio\" name=\"app-type\" id=\"serving\" value=\"Sevak\"><label for=\"serving\">Serve the course</label><br>"+
                "<label>Specific Requirement/Need/Request(e.g chair, chowky or any other)</label>"+
                "<textarea name=\"comment\" id=\"txt-comment\" rows=\"4\"></textarea>"+
                "<label>Emergency Contact Person Name</label>"+
                "<input type=\"text\" name=\"emergency-person\" id=\"emergency-person\" required>"+
                "<label>Emergency Contact Person Number</label>"+
                "<input type=\"text\" name=\"emergency-number\" id=\"emergency-number\" required>"+
                "<label>Date and time of arrival at the centre</label>"+
                "<input type=\"text\" name=\"arrival\" id=\"arrival\" required>"+
                "<label>Date when you will be leaving the centre</label>"+
                "<input type=\"text\" name=\"leaving\" id=\"leaving\" required>"+
                "</div>" +
                "</form>",
              buttons: {
                  Ok: {
                      text: "Ok",
                      btnClass: "btn-blue",
                      action: function () {


                          comment = this.$content.find("#txt-comment").val();
                          app_type = this.$content.find(\'input[name="app-type"]:checked\').val();
                          emergency_person = this.$content.find("#emergency-person").val();
                          if(!emergency_person){
                              $.alert("Please enter Emergency Contact Person Name");
                              return false;
                          }
                          emergency_number= this.$content.find("#emergency-number").val();
                          if(!emergency_number){
                              $.alert("Please enter Emergency Contact Person Number");
                              return false;
                          }
                          if(!(/^[0-9+][0-9]*/.test(emergency_number))){
                              $.alert("Invalid contact number, only numbers and + allowed");
                              return false;
                          }
                          arrival= this.$content.find("#arrival").val();
                          if(!arrival){
                              $.alert("Please enter Arrival Date and Time");
                              return false;
                          }
                          leaving= this.$content.find("#leaving").val();
                          if(!leaving){
                              $.alert("Please enter Leaving Date");
                              return false;
                          }


                          $.getJSON( "/at-portal/course-sit-apply/"+center_id+"/"+course_id, { emergency_person: emergency_person, comment: comment, emergency_number: emergency_number, arrival: arrival, leaving: leaving, app_type: app_type } )
                    .done(function( json ) {
                      if (json.status == "OK")
                      {
                        alert(json.msg);
                        location.reload(true);
                      }
                      else
                        alert("Not able to apply for course\n"+json.msg)
                    })
                    .fail(function( jqxhr, textStatus, error ) {
                      var err = textStatus + ", " + error;
                      alert("Error in applying for course "+err);
                  });


                      }
                  },
                  Cancel: function () {
                      //close
                  },
              },
              onContentReady: function () {
                  // bind to events
                  var jc = this;
                  this.$content.find("form").on("submit", function (e) {
                      // if the user submits the form by pressing enter in the field.
                      e.preventDefault();
                      jc.$$formSubmit.trigger("click"); // reference the button and click it
                  });
              }
          });




        });









      }
      $(document).ready(function(){
        $("#edit-location").select2();
        $("#edit-course-type").select2();

        var dataset = '.$data.';
        do_datatable("#at-course-list", dataset);

        $(".from-date-class").parent().parent().parent().parent().attr("id", "from-date-id-div");
        $(".to-date-class").parent().parent().parent().parent().attr("id", "to-date-id-div");
        $("#edit-location").parent().attr("id", "edit-location-div");
      });
    })(jQuery);
  ';

  drupal_add_js($js, 'inline');

  $form['#attached']['css'][] = array(
    'data' => '#edit-from-date, #edit-to-date { float: none;}
          .container-inline-date {margin-bottom: 10px;}
          .apply-at-sit-serve {
            background-color: #F5ECCE;
            border: 1px solid black;
            border-radius: 2px;
            color: #000;
            padding: 5px 25px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-family: "Helvetica Neue","Helvetica","Arial",sans-serif;
              font-size: 15px;
              -webkit-font-smoothing: antialiased;
              font-weight: 600;
          }
          #at-course-list td:nth-child(1) { width: 9%; text-align: left }
          #at-course-list td:nth-child(2) { width: 16%; text-align: left }
          #at-course-list td:nth-child(3) { width: 9%; text-align: left }
          #at-course-list td:nth-child(4) { width: 14%; text-align: left }
          #at-course-list td:nth-child(5) { width: 14%; text-align: left }
          #at-course-list td:nth-child(6) { width: 9%; text-align: left }
          #at-course-list td:nth-child(7) { width: 9%; text-align: left }
          #at-course-list td:nth-child(8) { width: 20%; text-align: left }
          #from-date-id-div { float: left; margin-right: 40px}
          #to-date-id-div { float: left; clear: none;  }
          #edit-location-div { clear: both; }
          .status-red { color: red; }
          .status-yellow { color: yellow; }
          .status-green { color: green; }
          .status-na { color: red; }
          ',
    'type' => 'inline',
  );

  return $form;
}




function at_course_sit_list_form_submit($form, &$form_state)
{
  $form_state['user_input'] = $form_state['input'];
    $form_state['rebuild'] = TRUE;
}


function at_course_sit_apply()
{
  $out = array();
  $out['status'] = 'Failed';
  $out['msg'] ="";

  global $user;

  $at_details = db_query("select * from dh_teacher where t_status='Active' and CONCAT(t_code,'.',t_gender) = '$user->name' limit 1")->fetchAssoc();

  if (!$at_details)
  {
    $out['msg'] ="This feature is only for ATs";
    drupal_json_output($out);
    exit;
  }

  $ac_teacher_code=strtoupper(str_replace('.', '-', $user->name));

  $center = arg(2);
  $course = arg(3);
  $emergency_person = $_REQUEST['emergency_person'];
  $emergency_number = $_REQUEST['emergency_number'];
  $comment = "Arrival Info: ".$_REQUEST['arrival']."\n".
      "Leaving Info: ".$_REQUEST['leaving']."\n".$_REQUEST['comment'];
  $app_type = $_REQUEST['app_type'];

  if(!in_array($app_type, array("Student", "Sevak")))
  {
    $out['msg'] ="Invalid application type";
    drupal_json_output($out);
    exit;
  }

  $q = "select c_deleted, c_cancelled, c_start, c_end, c_status_om, c_status_of, c_status_om, c_status_of, c_status_svr_m, c_status_svr_f, c_enrol_date, c_list_only, c_status, td_val3  FROM dh_course co left join dh_type_detail td on co.c_course_type=td.td_id where c_start >= curdate() and c_center=:center and c_id=:course order by c_start asc";

  $ret = db_query($q, array(":center" => $center, ":course" => $course))->fetchAssoc();
  if(!$ret)
  {
    $out['msg'] ="Invalid Course";
    drupal_json_output($out);
    exit;
  }

  $is_lc = $ret['td_val3']=='LC'?1:0;

  $applied = db_query("select a_id  FROM dh_applicant a left join dh_applicant_course ac on a.a_id=ac.ac_applicant where ac_teacher_code=:ac_teacher_code and a_course=:a_course and a_center=:a_center", array(":ac_teacher_code"=>$ac_teacher_code, ":a_course"=>$course, ":a_center"=>$center))->fetchField();

  $DISALLOWED_STATUS = array('Course Full', 'FULL', 'Closed');
  $today = date('Y-m-d');
  if($applied)
  {
    $out['msg'] = "Already applied for the course.";
  }
  elseif($today > $ret['c_start'])
  {
    $out['msg'] = "Course started.";
  }
  elseif($ret['c_deleted'])
  {
    $out['msg'] = "Course deleted.";
  }
  elseif($ret['c_cancelled'])
  {
    $out['msg'] = "Course cancelled.";
  }
  elseif (in_array($ret['c_status'], $DISALLOWED_STATUS))
  {
    $out['msg'] = "Course {$ret['c_status']}.";
  }
  elseif($ret['c_list_only'])
  {
    $out['msg'] = "Course is not accepting applications.";
  }
  elseif( $today <= $ret['c_start'] && $today >= $ret['c_enrol_date'] )
  {
    if( $app_type == "Student")
    {
      if($at_details['t_gender'] == 'M' && in_array($ret["c_status_om"], $DISALLOWED_STATUS))
        $out['msg'] = "Course is closed for old male students.";
      if($at_details['t_gender'] == 'F' && in_array($ret["c_status_of"], $DISALLOWED_STATUS))
        $out['msg'] = "Course is closed for old female students.";
    }
    if( $app_type == "Sevak")
    {
      if($at_details['t_gender'] == 'M' && in_array($ret["c_status_svr_m"], $DISALLOWED_STATUS))
        $out['msg'] = "Course is closed for old male servers.";
      if($at_details['t_gender'] == 'F' && in_array($ret["c_status_svr_f"], $DISALLOWED_STATUS))
        $out['msg'] = "Course is closed for old female servers.";
    }
  }
  else
  {
    $out['msg'] = "Course is not yet open for enrolment.";
  }

  if($out['msg'])
  {
    drupal_json_output($out);
    exit;
  }

  $app = array();
  $app_ac = array();

  $app['a_course'] = $course;
  $app['a_center'] = $center;
  $app['a_old'] = 1;
  $app['a_type'] = $app_type;
  $app['a_status'] =  '';
  $app['a_source'] = 'AT-Portal';
  $app['a_created_by'] = $user->uid;
  $app['a_created'] = date('Y-m-d H:i:s');
  $app['a_updated_by'] = $user->uid;
  $app['a_updated'] = date('Y-m-d H:i:s');
  $app['a_attended'] = 0;

  $app['a_f_name'] = $at_details['t_f_name'];
  $app['a_m_name'] = "";
  $app['a_l_name'] = $at_details['t_l_name'];
  $app['a_address'] = $at_details['t_address'];
  $app['a_country'] = $at_details['t_country'];
  $app['a_state'] = $at_details['t_state'];
  $app['a_phone_mobile'] = substr($at_details['t_mob_phone'],0,18);
  $app['a_email'] = $at_details['t_email'];
  $app['a_gender'] = $at_details['t_gender'];
  $app['a_dob'] = $at_details['t_dob'];
  $app['a_extra'] = $comment;
  $app['a_emergency_name'] = $emergency_person;
  $app['a_emergency_num'] = $emergency_number;

  if($at_details['t_full_t'])
    $at_type = "T";
  elseif($at_details['t_sat'])
    $at_type = "SAT";
  else
    $at_type = "AT";

  $app_ac['ac_teacher'] = 1;
  $app_ac['ac_teacher_code'] = $ac_teacher_code;
  $app_ac['ac_practice_details'] = $at_type;
  $app_ac['ac_10d'] = 1;

  $app_id = db_insert('dh_applicant')->fields($app)->execute();
  dh_send_letter('applicant', $app_id, $app['a_status'] );

  $app_ac['ac_applicant'] = $app_id;
  $app_ac['ac_updated_by'] = $app_ac['ac_created_by'] = $user->uid;
  $app_ac['ac_updated'] = $app_ac['ac_created'] = date('Y-m-d H:i:s');
  db_insert('dh_applicant_course')->fields($app_ac)->execute();

  if($is_lc)
  {
    $app_lc['al_applicant'] = $app_id;
    $app_lc['al_recommending'] = "{$app['a_f_name']} {$app['a_l_name']}";
    $app_lc['al_area_at'] = "None";
    $app_lc['al_recommending_approved'] = "Approved";
    $app_lc['al_area_at_approved'] = "Approved";

    db_insert('dh_applicant_lc')->fields($app_lc)->execute();
  }


  $cmd = "/usr/bin/php status-trigger.php $app_id 'Received'";
  exec($cmd);

  $out['status'] = 'OK';
  $out['msg'] = "Application submitted successfully";
  drupal_json_output($out);
  exit;
}
